name: Reusable action of running integration of production suite

on:
  workflow_call:
    inputs:
      FULLSTACK_TEST_REPO:
        required: false
        type: string
    secrets:
      CI_USER_TOKEN:
        required: true
      TRAVIS_COM_TOKEN:
        required: true
env:
  # Whether to run tests against all SDKS
  BUILD_NUMBER: ${{ github.run_id }}
  GITHUB_CONTEXT: ${{ toJson(github) }}
  REPOSITORY: ${{ github.repository }}
  EVENT_NAME: ${{ github.event_name }}
  SHA: ${{ github.repository }}
  TRAVIS_PULL_REQUEST_SHA: ${{ github.event.pull_request.head.sha }}
  TRAVIS_PULL_REQUEST: ${{ github.event.pull_request.number }}
  EVENT_MESSAGE: ${{ github.event.message }}
  HEAD_REF: ${{ github.head_ref }}
  REF_NAME: ${{ github.ref_name }}
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        # You should create a personal access token and store it in your repository
        token: ${{ secrets.CI_USER_TOKEN }}
        repository: 'optimizely/travisci-tools'
        path: 'home/runner/travisci-tools'
        ref: 'master'
    - name: set SDK Branch if PR
      if: ${{ inputs.EVENT_NAME == 'pull_request' }}
      run: |
        echo "SDK_BRANCH=${{ inputs.HEAD_REF }}" >> $GITHUB_ENV
        echo "TRAVIS_BRANCH=${{ inputs.HEAD_REF }}" >> $GITHUB_ENV
    - name: set SDK Branch if not pull request
      if: ${{ inputs.EVENT_NAME != 'pull_request' }}
      run: |
        echo "SDK_BRANCH=${{ inputs.REF_NAME }}" >> $GITHUB_ENV
        echo "TRAVIS_BRANCH=${{ inputs.REF_NAME }}" >> $GITHUB_ENV
    - name: Trigger build
      env:
        SDK: java
        FULLSTACK_TEST_REPO: ${{ inputs.FULLSTACK_TEST_REPO }}
        BUILD_NUMBER: ${{ inputs.BUILD_NUMBER }}
        TESTAPP_BRANCH: master
        GITHUB_TOKEN: ${{ secrets.CI_USER_TOKEN }}
        TRAVIS_EVENT_TYPE: ${{ inputs.EVENT_NAME }}
        GITHUB_CONTEXT: ${{ inputs.GITHUB_CONTEXT }}
        TRAVIS_REPO_SLUG: ${{ inputs.REPOSITORY }}
        TRAVIS_PULL_REQUEST_SLUG: ${{ inputs.REPOSITORY }}
        UPSTREAM_REPO: ${{ inputs.REPOSITORY }}
        TRAVIS_COMMIT: ${{ inputs.SHA }}
        TRAVIS_PULL_REQUEST_SHA: ${{ inputs.TRAVIS_PULL_REQUEST_SHA }}
        TRAVIS_PULL_REQUEST: ${{ inputs.TRAVIS_PULL_REQUEST }}
        UPSTREAM_SHA: ${{ inputs.SHA }}
        TRAVIS_COM_TOKEN: ${{ secrets.TRAVIS_COM_TOKEN }}
        EVENT_MESSAGE: ${{ inputs.EVENT_MESSAGE }}
        HOME: 'home/runner'
      run: |
        echo "$GITHUB_CONTEXT"
        home/runner/travisci-tools/trigger-script-with-status-update.sh
