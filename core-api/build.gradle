buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.6'
    }
}

plugins {
    id 'de.fuerstenau.buildconfig' version '1.1.7'
}

dependencies {
    compile group: 'org.slf4j', name: 'slf4j-api', version: slf4jVersion
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: jacksonVersion

    provided group: 'com.google.code.findbugs', name: 'annotations', version: findbugsVersion
    provided group: 'com.google.code.findbugs', name: 'jsr305', version: findbugsVersion

    // an assortment of json parsers
    provided group: 'com.google.code.gson', name: 'gson', version: gsonVersion, optional
    provided group: 'org.json', name: 'json', version: jsonVersion, optional
    provided group: 'com.googlecode.json-simple', name: 'json-simple', version: jsonSimpleVersion, optional
    provided group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: jacksonVersion, optional
}

apply plugin: 'com.jfrog.bintray'
apply plugin: 'de.fuerstenau.buildconfig'
apply plugin: 'maven-publish'

buildConfig {
    appName = 'core-api'
    version = rootProject.version
}

sourceSets {
    main {
        java.srcDir "${buildDir}/gen/buildconfig/src/main/"
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            pom.withXml {
                asNode().children().last() + {
                    resolveStrategy = Closure.DELEGATE_FIRST
                    url 'https://github.com/optimizely/java-sdk'
                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/license/LICENSE-2.0.txt'
                            distribution 'repo'
                        }
                    }
                    developers {
                        developer {
                            id 'optimizely'
                            name 'Optimizely'
                            email 'developers@optimizely.com'
                        }
                    }
                }
            }
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    pkg {
        repo = 'optimizely'
        name = 'optimizely-sdk-core-api'
        userOrg = 'optimizely'
        version {
            name = getVersion()
        }
        publications = ['mavenJava']
    }
}

publishArtifacts()
